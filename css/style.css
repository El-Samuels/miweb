.textos-h1-h2 {
   border-width: 3px;
   border-color: darkgrey;
   color: darkslategrey;
   font-family: 'open sans';
   text-align: center;
   padding-right: 30px;
   padding-left: 30px;
}

.formulario {
   color: darkblue;
   font-family: sans-serif;
   text-align: center;
   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

/* box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
esto es para una sombra, es para copiar y pegar */

.menu-link:hover {
   color: aquamarine;

}

/* el a:hover es para cambiar el estado de un elemento cuando el cursor esta sobre
 este, ejemplo: para que cuando el cursor pase por ensima de un elemento y este
cambie de color, se debe escribir:
a:hover{
 color: "cualquiera"
 } 
 */

body {
   background-color: darkgrey;
}

[type='checkbox'] {
   margin: 10px 3px 15px 3px;
}

[type='radio'] {
   margin: 10px 3px 10px 3px;
}

.Frase {
   font-size: 15px;
   font-family: 'open sans';
   color: black;
   text-align: center;
}

.border-de-form {
   margin-right: 510px;
   margin-left: 510px;
   border-style: solid;
   border-color: powderblue;
   border-width: 5px;
   border-radius: 10px;
   background-color: cornsilk;
}

.border-de-frase {
   background-color: aliceblue;
   border-style: solid;
   border-color: powderblue;
   border-width: 5px;
   margin-left: 420px;
   margin-right: 420px;
   margin-top: 20px;
   padding-top: 2px;
   padding-bottom: 2px;
   border-radius: 20px;
}

.text-transform {
   text-transform: uppercase;
}

/* .desplazamiento-al-centro {
   border-width: 5px;
   border-style: solid;
   border-color: black;
   border-radius: 10px;
    margin: 0 auto; */
;
/* margin-left: 500px; */
/* margin-top: 10px; */
/* left: 500px; */

/* } */

.letra-estilo {
   font-family: 'open sans';
}

.desplazamiento-al-centro {
   background-color: darkslategray;
   border-width: 5px;
   border-style: solid;
   border-color: black;
   border-radius: 10px;
   position: relative;
   left: 530px;
   margin-right: 1030px;
   margin-top: 6px;
   font-family: 'open sans';
   text-align: center;
   font-size: 15px;
}

/* Cuando la posición de un elemento se establece a relative, 
te permite especificar como CSS lo moverá relativo a su posición actual 
dentro del flujo normal de la página. Se empareja con las propiedades de 
desplazamiento CSS de left o right, y top o bottom. Estas dicen cuántos pixeles, 
porcentajes, o ems se debe mover el elemento lejos de donde esté normalmente 
posicionado.  relative */

/* paddin = relleno 
margin = margen
border = borde
Los bordes CSS tienen propiedades como style (estilo), color y width (ancho).
*/



.hello-right-form {
   border-color: black;
   border-style: solid;
   border-width: 5px;
   border-radius: 10px;
   position: relative;
   bottom: 290px;
   margin-right: 1250px;
   font-family: 'open sans';
   text-align: center;
}

/* el relative funciona para mover un elemento en la pantalla, por ejemplo:
se puede mover en la pantalla pero en el codigo queda como si estuviera en el
lugar default, si se hace sin relative no funciona, no se puede mover */



.usar-absolute {
   border-color: black;
   border-style: solid;
   border-width: 5px;
   position: absolute;
   text-align: center;
   bottom: 200px;
   border-radius: 8px;
}

/*Una diferencia clave entre las posiciones fixed y absolute
 es que un elemento con una posición fija (fixed) no se moverá cuando el usuario se desplace.
osea que se quedara en la pantalla, fijo (el elemento que tenga fixed)
*/


.menu-fixed {
   position: fixed;
   top: 0px;
   left: 0px;
   width: 100%;
   background-color:teal;

}

.menu-link {
   text-decoration: none; 
   color: black;
   font-family: arial;
}
 

.h2-que-no-interfiera {
   position: absolute;
   bottom: 100px;
}

.cuadrado {
   background-color: blue;
   position: absolute;
   /* margin-left: 200px; */
   left: 1200px;
   top: 380px;
   z-index: 1;
}

.cuadrado-red {
   background-color: red;
   position: absolute;
   /* margin-left: 200px; */
   left: 1190px;
   top: 370px;
   z-index: 2;
}

.div-cuadrado {
   width: 100px;
   height: 100px;
   margin-top: 20px;
}

.hover-scale {
   position: absolute;
   display:inline-block;
   left: 400px;
}

div.hover-scale:hover {
      transform: scale(1.3);
      color:rgba(132, 0, 255, 0.663)
} 


/* .heart {
   position: absolute;
   margin: auto;
   top: 0;
   right: 0;
   bottom: 0;
   left: 0;
   background-color: pink;
   height: 50px;
   width: 50px;
   transform: rotate(-45deg) ;
 }
 .heart::after {
   background-color: pink;
   content: "";
   border-radius: 50%;
   position: absolute;
   width: 50px;
   height: 50px;
   top: 0px;
   left: 25px;
 }
 .heart::before {
   content: '' ;
   background-color: pink;
   border-radius: 50%;
   position: absolute;
   width: 50px;
   height: 50px;
   top: -25px;
   left: 0px;
 } */

 .animation-text {
color: black;
font-family: arial;
background-color: wheat;
position: relative;
 }

 .animation-text:hover{
   animation-name: button-animation;
   animation-duration: 1s;
   animation-fill-mode: forwards;
 }

 @keyframes button-animation{
   100%{
      background-color: #4272CC;
   }
 }

 /* animation-iteration-count lo pones en infinito para que sea infinito */

 
/* Lo que quieres es que el botón permanezca resaltado.

 Esto se puede hacer estableciendo la propiedad animation-fill-mode en forwards. 
 El animation-fill-mode especifica el estilo aplicado a un elemento 
 cuando la animación ha finalizado.  */

 .desvanecer {
   text-align: center;
   width: 100px;
   height: 100px;
   position: relative;
   border-radius: 50%;
   background-color: darkcyan;

 }

 .desvanecer:hover{
   animation-name: desvanecer;
   animation-duration: 3s;
 }

 @keyframes desvanecer{
   0%{
      left: 0px;
   }

   30%{
      left: 30px;
      background-color: blueviolet;
   }

   60%{
      left: 40px;
      background-color: aqua;
   }

   100%{
      left: 0px;
      background-color:darkcyan;
   }

 }

.best-button{
   padding: 12px;
   width: 130px;
   cursor: pointer;
   background: #799be6;
   color: white;
   transition: .5s ease;
   border-radius: 10px;
   left: 600px;
   bottom: 10px;
   position: absolute;
}

.best-button:hover{
   background: transparent;
   border: 2px solid #799be6;
   box-shadow: 0 0 10px 0px #799be6 inset,
               0 0 10px 4px #799be6;
   border-radius: 10px;
}
